'''
                                                    RECURSION
'''


# Print Numbers from 1 to N
print("Print Numbers from 1 to N:")
def rec(n):
    if n==0:
        return 0
    rec(n-1)
    print(n)
    
rec(n=5)



# Sum of First N Natural Numbers
print("Sum of First N Natural Numbers:")
def rec1(n):
    if n == 0:
        return 0
    return n + rec1(n-1)

print(rec1(n=4))





# Finding nth term in Fibonacci Sequence using Recursion
print('Finding nth term in Fibonacci Sequence using Recursion:')
def printFib(n):
    if n==0:
        return 0
    if n==1:
        return 1
    return printFib(n-1) + printFib(n-2)
    

print(printFib(n=5))





# Sum of list
print("Sum of List")
def sumLi(li,n):
    if n == len(li)-1:
        return li[-1]
    else:
        return li[n] + sumLi(li,n+1)

li = [1,3,2,4,5]
print(sumLi(li,0))





# Sum of a 2-D list using recursion
print('Sum of a 2-D list using recursion:')
def sum2Dli(li,sum):
    for i in li:
        if isinstance(i,list):
            sum = sum2Dli(i,sum)
        else:
            sum += i
    return sum


li = [1,2,[3,4],[5,6]]
print(sum2Dli(li,0))





# Find the factorial of non-negative intiger.
print('Find the factorial of non-negative intiger:')
def recFact(n):
        if n == 1:
            return 1
        else:
            return n*recFact(n-1)

print(recFact(8))







# Finding
